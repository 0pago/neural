#!/usr/bin/env python
#
# this script runs TGLFNN
import time
t0=time.time()
import os
import sys
import glob
from numpy import *
from io import StringIO

set_printoptions(threshold=nan)

if 'FANN_ROOT' in os.environ:
    os.environ['LD_LIBRARY_PATH'] = os.environ.get('LD_LIBRARY_PATH', '') + ':' + os.environ['FANN_ROOT'] + os.sep + 'src'

TGLFNN_ROOT = str(os.path.abspath(os.path.dirname(unicode(__file__, sys.getfilesystemencoding()))))

sys.path.insert(0,TGLFNN_ROOT+os.sep+'..')
import brainfuse

if 'TGLFNN_ROOT' in os.environ:
    TGLFNN_ROOT = os.environ['TGLFNN_ROOT']
else:
    TGLFNN_ROOT = os.path.abspath(TGLFNN_ROOT)

if 'BRAINFUSE_ROOT' in os.environ:
    BRAINFUSE_ROOT = os.environ['BRAINFUSE_ROOT']
else:
    BRAINFUSE_ROOT = os.path.abspath(TGLFNN_ROOT+os.sep+'..')

files="%s/models/%s/brainfuse_*" % (TGLFNN_ROOT, sys.argv[1])
net_files = glob.glob(files)
if not net_files:
    raise(Exception('Missing nn files in %s'%files))
for line in open(net_files[0], 'Ur').readlines():
    if 'input_names' in line:
        inputNames = eval((line.replace('input_names=', '[') + ']').replace("' '", "','"))
    if 'output_names' in line:
        outputNames = eval((line.replace('output_names=', '[') + ']').replace("' '", "','"))

#os.system("%s/brainfuse_run.exe %s/models/%s/brainfuse_* %s" % (BRAINFUSE_ROOT, TGLFNN_ROOT, sys.argv[1], sys.argv[2]))

nets={}
for k in  glob.glob('%s/models/%s/brainfuse_*'%(TGLFNN_ROOT, sys.argv[1])):
    nets[k]=net=brainfuse.brainfuse(k)

dB={}
for k in net.inputNames:
    dB[k]=[]
for line in open(sys.argv[2],'Ur').readlines()[1:]:
    line=line.strip()
    if not len(line):
        continue
    line=line.split()
    if len(line)!=len(net.inputNames):
        raise(Exception('Wrong number of entries in %s!'%sys.argv[2]))
    for k,item in enumerate(line):
        dB[net.inputNames[k]].append( float(item))
for k in net.inputNames:
    dB[k]=array(dB[k])

out,sut,targets,nets,out_0=brainfuse.activateMergeNets(nets,dB,'RMIN_LOC')

with open('output.avg','w') as f:
    f.write('%d\n'%out.shape[0])
    for k in range(out.shape[0]):
        f.write(' '.join(map(lambda x:'%6.6f'%x,out[k,:]))+'\n')

with open('output.std','w') as f:
    f.write('%d\n'%sut.shape[0])
    for k in range(sut.shape[0]):
        f.write(' '.join(map(lambda x:'%6.6f'%x,sut[k,:]))+'\n')

with open('output.rng','w') as f:
    f.write('%d\n'%sut.shape[0])
    for k in range(sut.shape[0]):
        f.write(' '.join(map(lambda x:'%6.6f'%x,out[k,:]*0+1))+'\n')

print('tglfnn: %3.3f'%(time.time()-t0))
